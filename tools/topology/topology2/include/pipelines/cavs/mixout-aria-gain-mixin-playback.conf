#
# BE playback pipeline: mixout-aria-gain-mixin.
#
# All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.mixout-aria-gain-mixin-playback.N.attribute_name"
#
# Usage: mixout-aria-gain-mixin-playback pipeline object can be instantiated as:
#
# Object.Pipeline.mixout-aria-gain-mixin-playback."N" {
# 	period		1000
# 	time_domain	"timer"
# 	channels	2
# 	rate		48000
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/common/audio_format.conf>
<include/components/mixin.conf>
<include/components/gain.conf>
<include/components/mixout.conf>
<include/components/aria.conf>
<include/components/pipeline.conf>

Class.Pipeline."mixout-aria-gain-mixin-playback" {

	<include/pipelines/pipeline-common.conf>

	attributes {
		!constructor [
			"index"
		]

		!immutable [
			"direction"
		]

		#
		# mixout-aria-gain-mixin-playback objects instantiated within the same alsaconf node must have
		# unique pipeline_id attribute
		#
		unique	"instance"
	}

	Object.Widget {
		mixout."1" {}
		aria."1" {}
		gain."1" {
			num_input_audio_formats 1
			num_output_audio_formats 1

			# 32-bit 48KHz 2ch
			Object.Base.audio_format [
				{
					in_bit_depth		32
					in_valid_bit_depth	32
					out_bit_depth		32
					out_valid_bit_depth	32
				}
			]
		}
		mixin.1 {}

		pipeline."1" {
			priority		0
			lp_mode		0
		}
	}

	Object.Base {
		route.1 {
			source mixout.$index.1
			sink	aria.$index.1
		}
		route.2 {
			source	aria.$index.1
			sink	gain.$index.1
		}
		route.3 {
			source	gain.$index.1
			sink	mixin.$index.1
		}
	}

	direction	"playback"
	dynamic_pipeline 1
	time_domain	"timer"
	channels	2
	channels_min	2
	channels_max	2
	rate		48000
	rate_min	48000
	rate_max	48000
}
